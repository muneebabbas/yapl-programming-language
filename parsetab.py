
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '224AA2E90B78C041320CCFACE9BF12FF'
    
_lr_action_items = {'OROR':([5,9,10,11,13,14,18,19,22,23,24,25,26,27,34,35,48,52,55,56,58,59,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,87,91,95,101,119,126,],[-58,-52,-55,-64,-53,-50,-59,39,-55,39,-63,-55,39,-54,39,39,39,39,39,-53,-55,-64,39,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,39,-56,-53,-55,-51,-56,-54,39,39,]),'NOTEQUAL':([5,9,10,11,13,14,18,19,22,23,24,25,26,27,34,35,48,52,55,56,58,59,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,87,91,95,101,119,126,],[-58,-52,-55,-64,-53,-50,-59,37,-55,37,-63,-55,37,-54,37,37,37,37,37,-53,-55,-64,37,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,37,-56,-53,-55,-51,-56,-54,37,37,]),'RETURN':([0,1,2,4,5,8,9,10,11,13,14,15,16,18,19,21,22,24,25,26,27,29,30,31,32,48,49,50,53,54,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,90,91,95,96,100,104,110,111,112,119,127,129,131,137,138,139,142,143,149,150,155,156,157,159,162,163,165,],[4,4,21,21,-58,4,-52,-55,-64,-53,-50,21,21,-59,-35,21,-55,-63,-55,-37,-54,-3,21,21,21,-62,21,4,21,21,-36,-57,4,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,21,-51,-56,-12,21,-33,4,-5,21,-34,-7,4,4,-18,4,4,4,-31,-6,-27,-8,-26,-32,4,4,-13,-14,]),'LPAREN':([0,1,2,3,4,5,8,9,10,11,13,14,15,16,18,19,21,22,24,25,26,27,28,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,87,90,91,95,96,100,104,110,111,112,119,127,129,131,137,138,139,142,143,149,150,155,156,157,159,162,163,165,],[15,15,15,15,15,-58,15,-52,32,-64,-53,-50,15,15,-59,-35,15,32,-63,-55,-37,-54,51,-3,15,53,15,15,15,15,15,15,15,15,15,15,15,15,15,-62,15,15,15,15,-36,32,92,-57,15,-41,-58,32,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,32,15,-51,-56,-12,15,-33,15,-5,15,-34,-7,15,15,-18,15,15,15,-31,-6,-27,-8,-26,-32,15,15,-13,-14,]),'DO':([5,9,11,13,14,18,22,23,24,25,27,35,48,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,91,93,95,114,116,126,128,132,154,160,],[-58,-52,-64,-53,-50,-59,-55,50,-63,-55,-54,64,-62,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-51,110,-56,129,131,138,139,142,159,162,]),'NUMBER':([0,1,2,3,4,5,6,8,9,10,11,13,14,15,16,18,19,21,22,24,25,26,27,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,86,90,91,92,95,96,100,103,104,109,110,111,112,119,120,122,127,129,131,136,137,138,139,142,143,144,149,150,153,155,156,157,159,162,163,165,],[13,13,13,13,13,-58,27,13,-52,-55,-64,-53,-50,13,13,-59,-35,13,-55,-63,-55,-37,-54,-3,13,13,56,13,13,13,13,13,13,13,13,13,13,13,13,-62,13,13,85,56,-36,-57,13,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,101,56,-51,106,-56,-12,13,106,-33,124,13,-5,13,-34,106,106,-7,13,13,106,-18,13,13,13,-31,106,-6,-27,106,-8,-26,-32,13,13,-13,-14,]),'WHILE':([0,1,5,8,9,10,11,13,14,18,19,22,24,25,26,27,29,48,50,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,91,95,96,104,110,111,119,127,129,131,137,138,139,142,143,149,150,155,156,157,159,162,163,165,],[2,2,-58,2,-52,-55,-64,-53,-50,-59,-35,-55,-63,-55,-37,-54,-3,-62,2,-36,-57,2,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,-51,-56,-12,-33,2,-5,-34,-7,2,2,-18,2,2,2,-31,-6,-27,-8,-26,-32,2,2,-13,-14,]),'PRINT':([0,1,2,4,5,8,9,10,11,13,14,15,16,18,19,21,22,24,25,26,27,29,30,31,32,48,49,50,53,54,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,90,91,95,96,100,104,110,111,112,119,127,129,131,137,138,139,142,143,149,150,155,156,157,159,162,163,165,],[3,3,3,3,-58,3,-52,-55,-64,-53,-50,3,3,-59,-35,3,-55,-63,-55,-37,-54,-3,3,3,3,-62,3,3,3,3,-36,-57,3,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,3,-51,-56,-12,3,-33,3,-5,3,-34,-7,3,3,-18,3,3,3,-31,-6,-27,-8,-26,-32,3,3,-13,-14,]),'TRUE':([0,1,2,4,5,8,9,10,11,13,14,15,16,18,19,21,22,24,25,26,27,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,90,91,95,96,100,104,110,111,112,119,127,129,131,137,138,139,142,143,149,150,155,156,157,159,162,163,165,],[5,5,5,5,-58,5,-52,-55,-64,-53,-50,5,5,-59,-35,5,-55,-63,-55,-37,-54,-3,5,5,5,66,66,66,66,66,66,66,66,66,66,66,66,-62,5,5,5,5,-36,-57,5,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,5,-51,-56,-12,5,-33,5,-5,5,-34,-7,5,5,-18,5,5,5,-31,-6,-27,-8,-26,-32,5,5,-13,-14,]),'MINUS':([0,1,2,3,4,5,8,9,10,11,13,14,15,16,18,19,21,22,23,24,25,26,27,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,58,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,84,85,87,90,91,92,95,96,98,100,101,103,104,110,111,112,119,120,122,126,127,129,131,136,137,138,139,142,143,144,149,150,153,155,156,157,159,162,163,165,],[6,6,6,6,6,-58,6,-52,-55,-64,-53,-50,6,6,-59,46,6,-55,46,-63,-55,46,-54,-3,6,6,6,46,46,6,6,6,6,6,6,6,6,6,6,6,6,46,6,6,46,86,6,46,-53,-55,-64,46,-57,6,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,46,97,-56,-53,-55,6,-51,109,-56,-12,117,6,-54,109,-33,6,-5,6,46,109,109,46,-7,6,6,109,-18,6,6,6,-31,109,-6,-27,109,-8,-26,-32,6,6,-13,-14,]),'DEF':([0,1,5,8,9,10,11,13,14,18,19,22,24,25,26,27,29,48,50,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,91,95,96,104,110,111,119,127,129,131,137,138,139,142,143,149,150,155,156,157,159,162,163,165,],[7,7,-58,7,-52,-55,-64,-53,-50,-59,-35,-55,-63,-55,-37,-54,-3,-62,7,-36,-57,7,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,-51,-56,-12,-33,7,-5,-34,-7,7,7,-18,7,7,7,-31,-6,-27,-8,-26,-32,7,7,-13,-14,]),'RSQUARE':([5,9,11,13,14,18,22,24,25,27,48,52,54,56,57,58,59,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,89,90,91,95,105,],[-58,-52,-64,-53,-50,-59,-55,-63,-55,-54,-62,84,-21,-24,-20,-23,-25,-22,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,95,104,-21,-51,-56,-19,]),'LE':([5,9,10,11,13,14,18,19,22,23,24,25,26,27,34,35,48,52,55,56,58,59,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,87,91,95,101,119,126,],[-58,-52,-55,-64,-53,-50,-59,43,-55,43,-63,-55,43,-54,43,43,43,43,43,-53,-55,-64,43,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,43,-56,-53,-55,-51,-56,-54,43,43,]),'RPAREN':([5,9,11,13,14,18,22,24,25,27,32,34,48,51,56,57,58,59,60,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,82,83,85,87,90,91,95,99,101,105,106,108,118,124,133,146,152,158,],[-58,-52,-64,-53,-50,-59,-55,-63,-55,-54,-21,63,-62,81,-24,-20,-23,-25,91,-22,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,98,-30,-53,-55,-21,-51,-56,-28,-54,-19,-16,-17,-29,-15,143,154,157,160,]),',':([5,9,11,13,14,18,22,24,25,27,48,56,57,58,59,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,83,85,87,88,91,95,101,106,107,108,124,],[-58,-52,-64,-53,-50,-59,-55,-63,-55,-54,-62,-24,90,-23,-25,-22,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,99,-16,-17,103,-51,-56,-15,-16,122,-17,-15,]),'.':([85,87,88,101,102,106,107,108,121,123,124,134,135,145,],[-16,-17,102,-15,120,-16,123,-17,134,136,-15,144,145,153,]),'LT':([5,9,10,11,13,14,18,19,22,23,24,25,26,27,34,35,48,52,55,56,58,59,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,87,91,95,101,119,126,],[-58,-52,-55,-64,-53,-50,-59,40,-55,40,-63,-55,40,-54,40,40,40,40,40,-53,-55,-64,40,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,40,-56,-53,-55,-51,-56,-54,40,40,]),'PLUS':([5,9,10,11,13,14,18,19,22,23,24,25,26,27,34,35,48,52,55,56,58,59,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,87,91,95,101,119,126,],[-58,-52,-55,-64,-53,-50,-59,44,-55,44,-63,-55,44,-54,44,44,44,44,44,-53,-55,-64,44,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,44,-56,-53,-55,-51,-56,-54,44,44,]),'EQUALEQUAL':([5,9,10,11,13,14,18,19,22,23,24,25,26,27,34,35,48,52,55,56,58,59,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,87,91,95,101,119,126,],[-58,-52,-55,-64,-53,-50,-59,45,-55,45,-63,-55,45,-54,45,45,45,45,45,-53,-55,-64,45,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,45,-56,-53,-55,-51,-56,-54,45,45,]),'IDENTIFIER':([0,1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,18,19,21,22,24,25,26,27,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,90,91,92,95,96,99,100,103,104,110,111,112,119,120,122,127,129,131,136,137,138,139,142,143,144,149,150,153,155,156,157,159,162,163,165,],[10,10,22,25,22,-58,28,10,-52,-55,-64,33,-53,-50,22,22,-59,-35,22,-55,-63,-55,-37,-54,-3,22,22,58,67,67,67,67,67,67,67,67,67,67,67,67,-62,22,10,83,87,58,-36,93,-57,10,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,58,-51,108,-56,-12,83,22,108,-33,10,-5,22,-34,108,108,-7,10,10,108,-18,10,10,10,-31,108,-6,-27,108,-8,-26,-32,10,10,-13,-14,]),'$end':([0,1,5,8,9,10,11,13,14,17,18,19,20,22,24,25,26,27,29,48,55,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,91,95,96,104,111,119,127,137,143,149,150,155,156,157,163,165,],[-2,-2,-58,-4,-52,-55,-64,-53,-50,0,-59,-35,-1,-55,-63,-55,-37,-54,-3,-62,-36,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,-51,-56,-12,-33,-5,-34,-7,-18,-31,-6,-27,-8,-26,-32,-13,-14,]),'GT':([5,9,10,11,13,14,18,19,22,23,24,25,26,27,34,35,48,52,55,56,58,59,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,87,91,95,97,101,117,119,126,],[-58,-52,-55,-64,-53,-50,-59,38,-55,38,-63,-55,38,-54,38,38,38,38,38,-53,-55,-64,38,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,38,-56,-53,-55,-51,-56,116,-54,132,38,38,]),'END':([5,8,9,10,11,13,14,18,19,22,24,25,26,27,29,48,50,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,84,91,94,95,96,104,110,111,113,115,119,125,127,129,130,131,137,138,139,140,141,142,143,147,148,149,150,151,155,156,157,159,161,162,163,164,165,],[-58,-4,-52,-55,-64,-53,-50,-59,-35,-55,-63,-55,-37,-54,-3,-62,-4,-36,-57,-4,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,96,-56,-51,111,-56,-12,-33,-4,-5,127,-10,-34,137,-7,-4,-9,-4,-18,-4,-4,149,150,-4,-31,-11,155,-6,-27,156,-8,-26,-32,-4,163,-4,-13,165,-14,]),'STRING':([0,1,2,3,4,5,8,9,10,11,13,14,15,16,18,19,21,22,24,25,26,27,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,90,91,95,96,100,104,110,111,112,119,127,129,131,137,138,139,142,143,149,150,155,156,157,159,162,163,165,],[11,11,11,11,11,-58,11,-52,-55,-64,-53,-50,11,11,-59,-35,11,-55,-63,-55,-37,-54,-3,11,11,59,11,11,11,11,11,11,11,11,11,11,11,11,-62,11,11,11,59,-36,-57,11,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,59,-51,-56,-12,11,-33,11,-5,11,-34,-7,11,11,-18,11,11,11,-31,-6,-27,-8,-26,-32,11,11,-13,-14,]),'FOR':([0,1,5,8,9,10,11,13,14,18,19,22,24,25,26,27,29,48,50,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,91,95,96,104,110,111,119,127,129,131,137,138,139,142,143,149,150,155,156,157,159,162,163,165,],[12,12,-58,12,-52,-55,-64,-53,-50,-59,-35,-55,-63,-55,-37,-54,-3,-62,12,-36,-57,12,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,-51,-56,-12,-33,12,-5,-34,-7,12,12,-18,12,12,12,-31,-6,-27,-8,-26,-32,12,12,-13,-14,]),'EQUAL':([10,84,],[31,100,]),'TIMES':([5,9,10,11,13,14,18,19,22,23,24,25,26,27,34,35,48,52,55,56,58,59,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,87,91,95,101,119,126,],[-58,-52,-55,-64,-53,-50,-59,41,-55,41,-63,-55,41,-54,41,41,41,41,41,-53,-55,-64,41,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,41,-56,-53,-55,-51,-56,-54,41,41,]),'GE':([5,9,10,11,13,14,18,19,22,23,24,25,26,27,34,35,48,52,55,56,58,59,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,87,91,95,101,119,126,],[-58,-52,-55,-64,-53,-50,-59,42,-55,42,-63,-55,42,-54,42,42,42,42,42,-53,-55,-64,42,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,42,-56,-53,-55,-51,-56,-54,42,42,]),'ELSIF':([5,8,9,10,11,13,14,18,19,22,24,25,26,27,29,48,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,91,94,95,96,104,111,115,119,127,137,138,143,147,149,150,155,156,157,163,165,],[-58,-4,-52,-55,-64,-53,-50,-59,-35,-55,-63,-55,-37,-54,-3,-62,-36,-57,-4,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,-51,112,-56,-12,-33,-5,112,-34,-7,-18,-4,-31,-11,-6,-27,-8,-26,-32,-13,-14,]),'IN':([33,],[62,]),'ELSE':([5,8,9,10,11,13,14,18,19,22,24,25,26,27,29,48,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,91,94,95,96,104,111,113,115,119,127,130,137,138,143,147,149,150,155,156,157,163,165,],[-58,-4,-52,-55,-64,-53,-50,-59,-35,-55,-63,-55,-37,-54,-3,-62,-36,-57,-4,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,-51,114,-56,-12,-33,-5,128,-10,-34,-7,-9,-18,-4,-31,-11,-6,-27,-8,-26,-32,-13,-14,]),'IF':([0,1,5,8,9,10,11,13,14,18,19,22,24,25,26,27,29,48,50,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,91,95,96,104,110,111,119,127,129,131,137,138,139,142,143,149,150,155,156,157,159,162,163,165,],[16,16,-58,16,-52,-55,-64,-53,-50,-59,-35,-55,-63,-55,-37,-54,-3,-62,16,-36,-57,16,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,-51,-56,-12,-33,16,-5,-34,-7,16,16,-18,16,16,16,-31,-6,-27,-8,-26,-32,16,16,-13,-14,]),'ANDAND':([5,9,10,11,13,14,18,19,22,23,24,25,26,27,34,35,48,52,55,56,58,59,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,87,91,95,101,119,126,],[-58,-52,-55,-64,-53,-50,-59,36,-55,36,-63,-55,36,-54,36,36,36,36,36,-53,-55,-64,36,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,36,-56,-53,-55,-51,-56,-54,36,36,]),'FALSE':([0,1,2,4,5,8,9,10,11,13,14,15,16,18,19,21,22,24,25,26,27,29,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,84,90,91,95,96,100,104,110,111,112,119,127,129,131,137,138,139,142,143,149,150,155,156,157,159,162,163,165,],[18,18,18,18,-58,18,-52,-55,-64,-53,-50,18,18,-59,-35,18,-55,-63,-55,-37,-54,-3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-62,18,18,18,18,-36,-57,18,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,-56,18,-51,-56,-12,18,-33,18,-5,18,-34,-7,18,18,-18,18,18,18,-31,-6,-27,-8,-26,-32,18,18,-13,-14,]),'LSQUARE':([10,22,25,31,58,67,87,],[30,49,49,54,49,49,49,]),'MOD':([5,9,10,11,13,14,18,19,22,23,24,25,26,27,34,35,48,52,55,56,58,59,61,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,85,87,91,95,101,119,126,],[-58,-52,-55,-64,-53,-50,-59,47,-55,47,-63,-55,47,-54,47,47,47,47,47,-53,-55,-64,47,-57,-41,-58,-55,-42,-45,-48,-47,-40,-44,-46,-38,-43,-39,-49,47,-56,-53,-55,-51,-56,-54,47,47,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'yapl':([0,1,],[17,20,]),'statements':([0,1,8,50,64,110,129,131,138,139,142,159,162,],[1,1,29,80,94,125,140,141,147,148,151,161,164,]),'elsif':([94,115,],[115,115,]),'args':([32,54,90,],[60,89,105,]),'elsifs':([94,115,],[113,130,]),'term':([0,1,2,4,8,15,16,21,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,49,50,53,54,64,90,100,110,112,129,131,138,139,142,159,162,],[14,14,14,14,14,14,14,14,14,14,14,65,68,69,70,71,72,73,74,75,76,77,78,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'loopvar':([53,92,103,120,122,136,144,153,],[88,107,121,133,135,146,152,158,]),'literal':([32,54,90,],[57,57,57,]),'params':([51,99,],[82,118,]),'statement':([0,1,8,50,64,110,129,131,138,139,142,159,162,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'factor':([0,1,2,3,4,8,15,16,21,30,31,32,36,37,38,39,40,41,42,43,44,45,46,47,49,50,53,54,64,90,100,110,112,129,131,138,139,142,159,162,],[9,9,9,24,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'expression':([0,1,2,4,8,15,16,21,30,31,32,49,50,53,54,64,90,100,110,112,129,131,138,139,142,159,162,],[19,19,23,26,19,34,35,48,52,55,61,79,19,34,61,19,61,119,19,126,19,19,19,19,19,19,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> yapl","S'",1,None,None,None),
  ('yapl -> statements yapl','yapl',2,'p_yapl','yaplparser_exp.py',11),
  ('yapl -> <empty>','yapl',0,'p_yapl_empty','yaplparser_exp.py',15),
  ('statements -> statement statements','statements',2,'p_statements','yaplparser_exp.py',19),
  ('statements -> <empty>','statements',0,'p_statements_empty','yaplparser_exp.py',23),
  ('statement -> IF expression DO statements END','statement',5,'p_statement_if','yaplparser_exp.py',29),
  ('statement -> IF expression DO statements ELSE DO statements END','statement',8,'p_statement_ifelse','yaplparser_exp.py',33),
  ('statement -> IF expression DO statements elsifs END','statement',6,'p_statement_ifelsif','yaplparser_exp.py',37),
  ('statement -> IF expression DO statements elsifs ELSE DO statements END','statement',9,'p_statement_ifelsifelse','yaplparser_exp.py',41),
  ('elsifs -> elsif elsifs','elsifs',2,'p_elsifs','yaplparser_exp.py',45),
  ('elsifs -> <empty>','elsifs',0,'p_elsifs_empty','yaplparser_exp.py',49),
  ('elsif -> ELSIF expression DO statements','elsif',4,'p_elsif','yaplparser_exp.py',53),
  ('statement -> WHILE expression DO statements END','statement',5,'p_while','yaplparser_exp.py',59),
  ('statement -> FOR IDENTIFIER IN LPAREN loopvar . . loopvar RPAREN DO statements END','statement',12,'p_ranged_for','yaplparser_exp.py',63),
  ('statement -> FOR IDENTIFIER IN LPAREN loopvar , loopvar . . loopvar RPAREN DO statements END','statement',14,'p_ranged_for_offset','yaplparser_exp.py',67),
  ('loopvar -> MINUS NUMBER','loopvar',2,'p_loopavar_num_neg','yaplparser_exp.py',71),
  ('loopvar -> NUMBER','loopvar',1,'p_loopvar_num','yaplparser_exp.py',75),
  ('loopvar -> IDENTIFIER','loopvar',1,'p_loopvar_id','yaplparser_exp.py',79),
  ('statement -> FOR IDENTIFIER IN IDENTIFIER DO statements END','statement',7,'p_loop_array','yaplparser_exp.py',83),
  ('args -> literal , args','args',3,'p_args','yaplparser_exp.py',94),
  ('args -> literal','args',1,'p_args_single','yaplparser_exp.py',98),
  ('args -> <empty>','args',0,'p_args_empty','yaplparser_exp.py',102),
  ('literal -> expression','literal',1,'p_literal_expression','yaplparser_exp.py',106),
  ('literal -> IDENTIFIER','literal',1,'p_literal_id','yaplparser_exp.py',110),
  ('literal -> NUMBER','literal',1,'p_literal_number','yaplparser_exp.py',114),
  ('literal -> STRING','literal',1,'p_literal_string','yaplparser_exp.py',118),
  ('statement -> DEF IDENTIFIER LPAREN params RPAREN MINUS GT DO statements END','statement',10,'p_function','yaplparser_exp.py',122),
  ('statement -> DEF IDENTIFIER LPAREN RPAREN MINUS GT DO statements END','statement',9,'p_function_empty','yaplparser_exp.py',125),
  ('params -> <empty>','params',0,'p_params_empty','yaplparser_exp.py',129),
  ('params -> IDENTIFIER , params','params',3,'p_params','yaplparser_exp.py',132),
  ('params -> IDENTIFIER','params',1,'p_params_single','yaplparser_exp.py',135),
  ('statement -> IDENTIFIER EQUAL LPAREN loopvar . . loopvar RPAREN','statement',8,'p_array_declaration_range','yaplparser_exp.py',143),
  ('statement -> IDENTIFIER EQUAL LPAREN loopvar , loopvar . . loopvar RPAREN','statement',10,'p_array_declaration_ranged','yaplparser_exp.py',147),
  ('statement -> IDENTIFIER EQUAL LSQUARE args RSQUARE','statement',5,'p_array_declaration','yaplparser_exp.py',151),
  ('statement -> IDENTIFIER LSQUARE expression RSQUARE EQUAL expression','statement',6,'p_array_assign','yaplparser_exp.py',155),
  ('statement -> expression','statement',1,'p_statement_expression','yaplparser_exp.py',163),
  ('statement -> IDENTIFIER EQUAL expression','statement',3,'p_statement_assignment','yaplparser_exp.py',167),
  ('statement -> RETURN expression','statement',2,'p_statement_return','yaplparser_exp.py',171),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','yaplparser_exp.py',175),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','yaplparser_exp.py',176),
  ('expression -> expression TIMES term','expression',3,'p_expression_binop','yaplparser_exp.py',177),
  ('expression -> expression ANDAND term','expression',3,'p_expression_binop','yaplparser_exp.py',178),
  ('expression -> expression NOTEQUAL term','expression',3,'p_expression_binop','yaplparser_exp.py',179),
  ('expression -> expression EQUALEQUAL term','expression',3,'p_expression_binop','yaplparser_exp.py',180),
  ('expression -> expression GE term','expression',3,'p_expression_binop','yaplparser_exp.py',181),
  ('expression -> expression GT term','expression',3,'p_expression_binop','yaplparser_exp.py',182),
  ('expression -> expression LE term','expression',3,'p_expression_binop','yaplparser_exp.py',183),
  ('expression -> expression LT term','expression',3,'p_expression_binop','yaplparser_exp.py',184),
  ('expression -> expression OROR term','expression',3,'p_expression_binop','yaplparser_exp.py',185),
  ('expression -> expression MOD term','expression',3,'p_expression_binop','yaplparser_exp.py',186),
  ('expression -> term','expression',1,'p_expression_term','yaplparser_exp.py',190),
  ('term -> IDENTIFIER LPAREN args RPAREN','term',4,'p_function_call','yaplparser_exp.py',194),
  ('term -> factor','term',1,'p_term_factor','yaplparser_exp.py',198),
  ('factor -> NUMBER','factor',1,'p_factor_num','yaplparser_exp.py',202),
  ('factor -> MINUS NUMBER','factor',2,'p_factor_negative','yaplparser_exp.py',206),
  ('factor -> IDENTIFIER','factor',1,'p_factor_id','yaplparser_exp.py',210),
  ('factor -> IDENTIFIER LSQUARE expression RSQUARE','factor',4,'p_factor_array','yaplparser_exp.py',214),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','yaplparser_exp.py',218),
  ('term -> TRUE','term',1,'p_factor_true','yaplparser_exp.py',222),
  ('term -> FALSE','term',1,'p_factor_false','yaplparser_exp.py',226),
  ('expression -> IDENTIFIER','expression',1,'p_expression_id','yaplparser_exp.py',230),
  ('expression -> TRUE','expression',1,'p_expression_true','yaplparser_exp.py',234),
  ('expression -> RETURN expression','expression',2,'p_expression_return','yaplparser_exp.py',239),
  ('expression -> PRINT factor','expression',2,'p_expression_print','yaplparser_exp.py',243),
  ('factor -> STRING','factor',1,'p_factor_string','yaplparser_exp.py',248),
]
